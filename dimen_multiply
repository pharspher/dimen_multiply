#!/usr/bin/perl
use Getopt::Long;
use POSIX;

sub round {
	return int($_[0] + 0.5);
}

my $op;

GetOptions(
		'op=s' => \$op
);

$op = lc $op;
$op = "ceil" if $op eq "ceiling";

$round1 = &{$op}(3.4);
$round2 = &{$op}(3.6);

my %res_multiplier = (
		FULLHD => 2.0,
		HD => 1.33,
		QHD => 1.0,
		WVGA => 1.0,
		WVGA_L => 1.0,
		HVGA => 0.66,
);

my $argc = $#ARGV + 1;
if ($argc != 4) {
	print "Invalid input\nUsage: dimen_multiply -op [floor|ceiling|round] [xxhdpi|xhdpi|hdpi|wvga|wvga_l|hvga] SRC_FILE [xxhdpi|xhdpi|hdpi|wvga|wvga_l|hvga] DST_FILE\n";
	exit 0;
}

my $src_file = $ARGV[1];
if (! -e $src_file) {
	print "Source file \"$ARGV[1]\" doesn't exist\n";
	exit 0;
}
my $src_multiplier = $res_multiplier{uc $ARGV[0]};

my $dst_file = $ARGV[3];
while (-e $dst_file) {
	($name, $group2, $count, $ext) = $dst_file =~ /(.+?)(_\((\d+)\)){0,1}(\.xml)/;
	$dst_file = $name."_(".++$count. ").xml";
}
my $dst_multiplier = $res_multiplier{uc $ARGV[2]};

my $multiplier = $src_multiplier / $dst_multiplier;

print "$multiplier\n";

open(INPUT_FILE, $src_file);
open(OUTPUT_FILE, ">$dst_file");
while(<INPUT_FILE>) {
	chomp;
	my $line = $_;
	if (($head, $sign, $dimen, $unit, $tail) = $line =~ m/(\s*<dimen name="\S+">)([\+-]*)(\d+)(\S+)(<\/dimen>)/) {
		$new_dimen = ($unit eq 'px') ? &{$op}($dimen / $multiplier) : $dimen;
		print OUTPUT_FILE "$head$sign$new_dimen$unit$tail\n";
	} else {
		print OUTPUT_FILE "$line\n";
	}
}
close(INPUT_FILE);
close(OUTPUT_FILE);
